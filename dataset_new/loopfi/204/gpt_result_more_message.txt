contract PrelaunchPoints {
    using Math for uint256;

    ILpETH public lpETH;
    ILpETHVault public lpETHVault;
    IWETH public immutable WETH;
    address public owner;
    
    uint256 public totalSupply;
    uint256 public totalLpETH;
    
    mapping(address => bool) public isTokenAllowed;
    mapping(address => mapping(address => uint256)) public balances;
    
    enum Exchange {
        UniswapV3,
        TransformERC20
    }
    
    bytes4 public constant UNI_SELECTOR = 0x803ba26d;
    bytes4 public constant TRANSFORM_SELECTOR = 0x415565b0;
    
    address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;
    address public immutable exchangeProxy;
    uint32 public loopActivation;
    uint32 public startClaimDate;
    
    uint32 public constant TIMELOCK = 7 days;
    bool public emergencyMode;

    constructor(ILpETH _lpETH, ILpETHVault _lpETHVault, IWETH _WETH, address _exchangeProxy) {
        lpETH = _lpETH;
        lpETHVault = _lpETHVault;
        WETH = _WETH;
        exchangeProxy = _exchangeProxy;
        owner = msg.sender;
    }
}