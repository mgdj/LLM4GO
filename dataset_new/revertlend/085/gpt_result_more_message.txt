**Recommendations:**
1. Use custom error instead of revert string to save gas.
2. Utilize unchecked block for optimized gas usage.
3. Cache state variables outside of loops to avoid multiple read operations.
4. Ensure to check before updating state variable with the same value.
5. Move require emit ahead for better gas optimization.

**Optimization Code:**
```solidity
// Define custom error
error EtherSendFailed();

// transfers token (or unwraps WETH and sends ETH)
function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {
    if (address(weth) == address(token) && unwrap) {
        weth.withdraw(amount);
        unchecked {
            (bool sent,) = to.call{value: amount}("");
            if (!sent) {
                revert EtherSendFailed();
            }
        }
    } else {
        SafeERC20.safeTransfer(token, to, amount);
    }
}
```