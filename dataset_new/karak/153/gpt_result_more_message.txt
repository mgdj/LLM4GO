function validateValidatorProof(
        uint40 validatorIndex,
        bytes32[] calldata validatorFields,
        bytes calldata validatorProof,
        bytes32 beaconStateRoot
    ) internal view {
        if (validatorFields.length != NUM_FIELDS) revert InvalidValidatorFieldsLength();

        bytes32 validatorRoot = Merkle.merkleizeSha256(validatorFields);

        require(validatorProof.length == 32 * ((VALIDATOR_HEIGHT + 1) + BEACON_STATE_HEIGHT), "InvalidValidatorFieldsProofLength");
        
        uint256 index = (CONTAINER_IDX << (VALIDATOR_HEIGHT + 1)) | uint256(validatorIndex);

        require(Merkle.verifyInclusionSha256(validatorProof, beaconStateRoot, validatorRoot, index), "InvalidValidatorFieldsProofInclusion");
    }
