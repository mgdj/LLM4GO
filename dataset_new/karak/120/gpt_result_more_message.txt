function finalizeSlashing(CoreLib.Storage storage self, QueuedSlashing memory queuedSlashing) external {
    bytes32 slashRoot = calculateRoot(queuedSlashing);
    if (!self.slashingRequests[slashRoot]) revert InvalidSlashingParams();
    if (queuedSlashing.timestamp + Constants.SLASHING_VETO_WINDOW > block.timestamp) {
        revert MinSlashingDelayNotPassed();
    }
    delete self.slashingRequests[slashRoot];

    bytes32 asset;
    for (uint256 i = 0; i < queuedSlashing.vaults.length; ++i) {
        asset = IKarakBaseVault(queuedSlashing.vaults[i]).asset();
        IKarakBaseVault(queuedSlashing.vaults[i]).slashAssets(
            queuedSlashing.earmarkedStakes[i],
            self.assetSlashingHandlers[asset]
        );
    }
    IDSS dss = queuedSlashing.dss;

    bool success; 
    bytes memory data = abi.encodeWithSelector(dss.finishSlashingHook.selector, queuedSlashing.operator);
    (success, ) = address(dss).call(abi.encodeWithSelector(dss.finishSlashingHook.selector, queuedSlashing.operator));
    if (success) {
        if (address(this).balance > 0) {
            self.dappSupply += address(this).balance;
        }
    }
}