contract PrincipalToken is ERC20PermitUpgradeable, AccessManagedUpgradeable, ReentrancyGuardUpgradeable, PausableUpgradeable, IPrincipalToken {
    using SafeERC20 for IERC20;
    using RayMath for uint256;
    using Math for uint256;

    uint256 internal constant MIN_DECIMALS = 6;
    uint256 internal constant MAX_DECIMALS = 18;
    bytes32 internal constant ON_FLASH_LOAN = keccak256("ERC3156FlashBorrower.onFlashLoan");

    address internal registry;

    address internal rewardsProxy;
    bool internal ratesAtExpiryStored;
    address internal ibt;
    address private _asset;
    address private yt;
    uint256 private ibtUnit;
    uint256 private _ibtDecimals;
    uint256 private _assetDecimals;

    uint256 private ptRate;
    uint256 private ibtRate;
    uint256 private unclaimedFeesInIBT;
    uint256 private totalFeesInIBT;
    uint256 private expiry;
    uint256 private duration;

    mapping(address => uint256) private ibtRateOfUser;
    mapping(address => uint256) private ptRateOfUser;
    mapping(address => uint256) private yieldOfUserInIBT;

    constructor(address _registry) {
        require(_registry != address(0), "AddressError");
        registry = _registry;
        _disableInitializers();
    }