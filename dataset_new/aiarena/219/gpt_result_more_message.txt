function reRoll(uint8 tokenId, uint8 fighterType) public {
        require(msg.sender == ownerOf(tokenId), "Unauthorized");
        require(numRerolls[tokenId] < maxRerollsAllowed[fighterType], "Max rerolls reached");
        require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, "Not enough NRN for reroll");

        _neuronInstance.approveSpender(msg.sender, rerollCost);
        if (_neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost)) {
            unchecked {
                numRerolls[tokenId]++;
                uint256 dna = uint256(keccak256(abi.encode(msg.sender, tokenId, numRerolls[tokenId])));
                (uint256 element, uint256 weight, uint256 newDna) = _createFighterBase(dna, fighterType);
                fighters[tokenId].element = element;
                fighters[tokenId].weight = weight;
                fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(
                    newDna,
                    generation[fighterType],
                    fighters[tokenId].iconsType,
                    fighters[tokenId].dendroidBool
                );
                _tokenURIs[tokenId] = "";
            }
        }
    }