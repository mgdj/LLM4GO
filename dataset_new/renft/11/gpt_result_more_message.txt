function _removeHooks(
        Hook[] calldata hooks,
        Item[] calldata rentalItems,
        address rentalWallet
    ) internal {
        uint256 itemIndex;
        Item memory item;
        address target;

        for (uint256 i = 0; i < hooks.length; ++i) {
            target = hooks[i].target;
            
            require(STORE.hookOnStop(target), Errors.Shared_DisabledHook(target));
            
            itemIndex = hooks[i].itemIndex;
            item = rentalItems[itemIndex];

            require(item.isRental(), Errors.Shared_NonRentalHookItem(itemIndex));

            (bool success, ) = target.call{gas: 50000}(
                abi.encodeWithSelector(
                    IHook(target).onStop.selector,
                    rentalWallet,
                    item.token,
                    item.identifier,
                    item.amount,
                    hooks[i].extraData
                )
            );
            
            if (!success) {
                string memory revertReason;
                assembly {
                    revertReason := add(0x20, revert(0, 0))
                }

                revert Errors.Shared_HookFailString(revertReason);
            }
        }
    }