function deployRentalSafe(
        address[] calldata owners,
        uint256 threshold
    ) external returns (address safe) {
        require(threshold != 0 && threshold <= owners.length, Errors.FactoryPolicy_InvalidSafeThreshold(threshold, owners.length));

        bytes memory data = abi.encodeWithSelector(
            Factory.initializeRentalSafe.selector,
            address(stopPolicy),
            address(guardPolicy)
        );

        bytes memory initializerPayload = abi.encodePacked(
            ISafe.setup.selector,
            abi.encode(
                owners,
                threshold,
                address(this),
                data,
                address(fallbackHandler),
                address(0),
                uint256(0),
                address(0)
            )
        );

        safe = address(
            safeProxyFactory.createProxyWithNonce(
                address(safeSingleton),
                initializerPayload,
                uint256(keccak256(abi.encode(STORE.totalSafes() + 1, block.chainid)))
            )
        );

        STORE.addRentalSafe(safe);

        emit Events.RentalSafeDeployment(safe, owners, threshold);
    }